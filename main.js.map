{"version":3,"sources":["webpack://TodoList/./src/domNodeCreator.js","webpack://TodoList/./src/factory.js","webpack://TodoList/./src/home.js","webpack://TodoList/./src/index.js","webpack://TodoList/./src/createTodo.js"],"names":["domNodeCreator","htmlTag","options","text","node","document","createElement","Object","keys","forEach","key","setAttribute","textContent","chainAppend","nodes","i","length","appendChild","todoModule","todoList","createTodo","title","description","dueDate","priority","projectId","obj","push","getProjectTodos","filter","ele","getAllTodos","deleteTodo","index","splice","projectModule","project","0","createProject","name","lastKey","parseInt","getProject","getAllProject","assign","renderProjectOptions","selectGroupProject","selectProject","getElementById","removeChild","id","class","projects","option","value","renderModal","body","querySelector","container","modal","modalDialog","modalContent","modalHeader","modalTitle","modalBody","modalFooter","closeButton","type","renderTodoList","content","allProjects","todos","h3","ul","li","group","edit","editIcon","remove","removeIcon","addEventListener","event","target","dataset","h1","form","input","placeholder","labelPriority","for","selectGroupPriority","selectPriority","labelProject","AddTodobutton","renderForm","createProjectButton","renderProjectForm","preventDefault","projectGroup","projectName","alert"],"mappings":"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","file":"main.js","sourcesContent":["const domNodeCreator = (htmlTag, options = {}, text = '') => {\n  const node = document.createElement(htmlTag);\n  const keys = Object.keys(options);\n  keys.forEach((key) => {\n    node.setAttribute(key, options[key]);\n  });\n  node.textContent = text;\n  return node;\n};\n\nconst chainAppend = (nodes = []) => {\n  for (let i = nodes.length - 2; i > 0; i -= 1) {\n    nodes[i].appendChild(nodes[i + 1]);\n  }\n  nodes[0].appendChild(nodes[1]);\n};\n\nexport { domNodeCreator, chainAppend };\n\n","const todoModule = (() => {\n    const todoList = []\n    function todoFactory(title, description, dueDate, priority, projectId = 0) {\n        const obj = {}\n        obj.title = title\n        obj.description = description\n        obj.dueDate = dueDate\n        obj.priority = priority\n        obj.projectId = projectId\n        todoList.push(obj)\n    }\n    return {\n        createTodo: todoFactory,\n        getProjectTodos: (projectId) => {return todoList.filter((ele)=> ele.projectId == projectId)},\n        getAllTodos: ()=> [...todoList],\n        deleteTodo: (index)=> todoList.splice(index, 1),\n    }\n})()\n\nconst projectModule = (() => {\n    const project = {0: 'default'}\n    function projectFactory(name){\n        const lastKey = Object.keys(project)[Object.keys(project).length - 1]\n        project[parseInt(lastKey)+1] = name\n    }\n    return {\n        createProject: projectFactory,\n        getProject: (projectId) => project[projectId],\n        getAllProject: () => Object.assign(project)\n    }\n})()\n\nexport {todoModule, projectModule}","import {domNodeCreator, chainAppend } from './domNodeCreator'\nimport {projectModule, todoModule} from './factory'\n\nconst renderProjectOptions = function(selectGroupProject) {\n    let selectProject = document.getElementById('project')\n    if(selectProject){\n        selectGroupProject.removeChild(selectProject)\n    }\n        \n    selectProject = domNodeCreator('select', {id: \"project\", class: 'form-control mr-3'}) \n    const projects = projectModule.getAllProject()\n    for(let key in projects) {\n        const option = domNodeCreator('option', {value: key}, projects[key])\n        selectProject.appendChild(option)\n    }\n    selectGroupProject.appendChild(selectProject)\n}\n\nconst renderForm = function (){\n    const content = document.getElementById('content')\n    \n    const h1 = domNodeCreator('h1', {}, 'Todo List')\n    const form = domNodeCreator('form', {class: 'mb-3'})\n    let todoAttr = ['Title', 'Description', 'Due date']\n    todoAttr.forEach((ele)=>{\n        const group = domNodeCreator('div', {class: 'form-group col-md-7'})\n        const input = domNodeCreator('input', {type: 'text', class: 'form-control', id: ele, placeholder: ele})\n        chainAppend([form, group, input])\n    })\n\n    const labelPriority = domNodeCreator('label', {for: 'priority', class: 'col-sm-2 col-form-label'}, 'Priority')\n    form.appendChild(labelPriority)\n    \n    const selectGroupPriority = domNodeCreator('div', {class: 'form-group col-md-4'})\n    const selectPriority = domNodeCreator('select', {id: \"priority\", class: 'form-control'}) \n    let priorityLevels = ['Not Urgent', 'Urgent']\n    priorityLevels.forEach((ele)=>{\n        const option = domNodeCreator('option', {}, ele)\n        selectPriority.appendChild(option)\n    })\n    chainAppend([form, selectGroupPriority, selectPriority])\n\n    const labelProject = domNodeCreator('label', {for: 'project', class: 'col-sm-2 col-form-label'}, 'Project')\n    form.appendChild(labelProject)\n\n    const selectGroupProject = domNodeCreator('div', {class: 'form-group col-md-4', id: 'project-group'})\n    \n    renderProjectOptions(selectGroupProject)\n    \n    chainAppend([form, selectGroupProject])\n\n    const AddTodobutton = domNodeCreator('button', {type: 'submit', class: 'btn btn-primary', id: 'add-todo'}, 'Add Todo')\n    form.appendChild(AddTodobutton)\n    chainAppend([content, h1])\n    chainAppend([content, form])\n\n}\n\nconst renderModal = function() {\n    const body = document.querySelector('body')\n    const container = domNodeCreator('div', {class: 'container'})\n    \n    // domNodeCreator('h2', {}, 'Edit Todo')\n    // domNodeCreator('button', {type: 'button', class: 'btn btn-primary', data-toggle: 'modal', data-target: '#myModal'}, )\n    const modal = domNodeCreator('div', { class: 'modal', id: 'myModal'})\n    const modalDialog = domNodeCreator('div', { class: 'modal-dialog' })\n    const modalContent = domNodeCreator('div', { class: 'modal-content' })\n    const modalHeader = domNodeCreator('div', { class: 'modal-header' })\n    const modalTitle = domNodeCreator('h4', { class: 'modal-title' }, 'Edit Todo')\n    const modalBody = domNodeCreator('div', {class: 'modal-body'})\n    const modalFooter = domNodeCreator('div', {class: 'modal-footer'})\n    const closeButton = domNodeCreator('button', {type: 'button', class: 'btn btn-danger', 'data-dismiss': 'modal'}, 'Close')\n    chainAppend([modalContent, modalHeader, modalTitle])\n    chainAppend([modalContent, modalBody])\n    chainAppend([modalContent, modalFooter, closeButton])\n    chainAppend([body, container, modal, modalDialog, modalContent])\n}\n\nconst renderTodoList = function (){\n    const content = document.getElementById('content')\n    const todoList = domNodeCreator('div', {class: 'todo-list'})\n    if(document.querySelector('.todo-list')){\n        content.removeChild(document.querySelector('.todo-list'))\n    }\n    const allProjects = projectModule.getAllProject() \n    for(let key in allProjects){\n        const projectId = key\n        \n        const todos = todoModule.getProjectTodos(projectId)\n        if(!todos.length){\n            continue\n        }\n        const h3 = domNodeCreator('h3', {}, allProjects[key])\n        const ul = domNodeCreator('ul', {class: 'list-group list-group-flush'})\n        todos.forEach((ele, index)=>{\n            const li = domNodeCreator('li', {class: 'list-group-item'})\n            const title = domNodeCreator('span', {}, ele.title)\n            const description = domNodeCreator('p', {}, ele.description)\n            const priority = domNodeCreator('span', {}, ele.priority)\n            const group = domNodeCreator('div')\n            const edit = domNodeCreator('span', {class: 'mx-2'})\n            const editIcon = domNodeCreator('i', {class: 'fa fa-pencil-square-o', 'data-index': index, 'data-toggle': 'modal', 'data-target': '#myModal'})\n\n            \n            const remove = domNodeCreator('span')\n            const removeIcon = domNodeCreator('i', {class: 'fa fa-times', 'data-index': index})\n            removeIcon.addEventListener('click', (event)=>{\n                todoModule.deleteTodo(event.target.dataset.index)\n                renderTodoList()\n            })\n            chainAppend([li, title])\n            chainAppend([li, description])\n            chainAppend([li, group, priority])\n            chainAppend([li, group, edit, editIcon])\n            chainAppend([li, group, remove, removeIcon])\n            chainAppend([ul, li])\n            editIcon.addEventListener('click', () => {\n                renderModal()\n                // console.log('111');\n            })\n        })\n        chainAppend([content, todoList, h3])\n        chainAppend([content, todoList, ul])\n    }\n}\n\nconst renderProjectForm = function() {\n    \n    const content = document.getElementById('content')\n    const form = domNodeCreator('form', {class: 'mb-3'})\n    const group = domNodeCreator('div', {class: 'form-group col-md-7'})\n    const input = domNodeCreator('input', {type: 'text', class: 'form-control', id: 'project-name', placeholder: 'Project name'})\n    chainAppend([form, group, input])\n    \n    const createProjectButton = domNodeCreator('button', {type: 'submit', class: 'btn btn-primary', id: 'create-project'}, 'Create Project')\n    form.appendChild(createProjectButton)\n    \n    chainAppend([content, form])\n}\n\nexport {renderProjectOptions, renderForm, renderTodoList, renderProjectForm}","import {renderProjectOptions, renderForm, renderProjectForm, renderTodoList} from './home'\nimport createTodo from './createTodo'\nimport {projectModule} from './factory'\n\n\nrenderForm()\nrenderProjectForm()\nrenderTodoList()\n\nconst title = document.getElementById('Title')\nconst description = document.getElementById('Description') \nconst dueDate = document.getElementById('Due date') \nconst priority = document.getElementById('priority')\n\nconst addTodo = document.getElementById('add-todo')\n\naddTodo.addEventListener('click', (event)=>{\n  const project = document.getElementById('project')\n  event.preventDefault()\n  createTodo(title.value, description.value, dueDate.value, priority.value, parseInt(project.value))\n  // console.log(parseInt(project.value))\n  renderTodoList()\n})\n\nconst projectGroup = document.getElementById('project-group')\nconst projectName = document.getElementById('project-name')\nconst createProject = document.getElementById('create-project')\n\ncreateProject.addEventListener('click', (event)=>{\n  event.preventDefault()\n  projectModule.createProject(projectName.value)\n  renderProjectOptions(projectGroup)\n  alert(\"New project created\")\n})\n\n// const changeToDo = document.querySelector('.modal-body')\n// changeToDo.appendChild(renderForm","import {todoModule} from './factory'\n\nexport default (title, description, priority, dueDate, projectId) => {\n    todoModule.createTodo(title, description, priority, dueDate, projectId)\n}"],"sourceRoot":""}